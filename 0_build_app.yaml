apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-django-py
  namespace: fiap-aso6-grupo07
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: blog-django-py
  
  template:
    metadata:
      labels: 
        app: blog-django-py
    spec: 
      containers:
        - name: blog-django-py
          image:  default-route-openshift-image-registry.apps.na46.prod.nextcle.com/fiap-aso6-grupo07/blog-django-py
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: fiap-aso6-grupo07-secret
                  key: database-url                         
            - name: BLOG_SITE_NAME
              valueFrom:
                configMapKeyRef:
                  name: fiap-aso6-grupo07-config-map
                  key: blog.site.name
            - name: BLOG_BANNER_COLOR
              valueFrom:
                configMapKeyRef:
                  name: fiap-aso6-grupo07-config-map
                  key: blog.site.color
         



---
kind: ConfigMap
apiVersion: v1
metadata:
  name:   blog-django-py-config-map
  namespace: fiap-aso6-grupo07
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
data:
  blog.site.color: blue
  blog.site.name: NOSSO BLOG /*DIONIS SILVA OLIVEIRA, MARCELO TOSSATO, GUILHERME NOMINATO, ANDERSON PERRELI*/

---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: blog-database
  namespace: fiap-aso6-grupo07
spec:
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: blog-database
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: blog-database
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      volumes:
        - name: blog-database-data
          persistentVolumeClaim:
            claimName: blog-database
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: blog-database
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: blog-database
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: blog-database
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: blog-database-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: blog-database
  namespace: fiap-aso6-grupo07
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---    
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: hpascale
  namespace: fiap-aso6-grupo07
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blog-from-image
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 50
          type: Utilization


---

kind: Service
apiVersion: v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    openshift.io/generated-by: OpenShiftWebConsole
  name: blog-django-py
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2022-01-10T20:25:11Z'
      fieldsType: FieldsV1
      
  namespace: fiap-aso6-grupo07
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: blog-django-py
 

  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}



--- 

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-all-namespaces
  namespace: fiap-aso6-grupo07
  generation: 1

  managedFields:
    - manager: openshift-apiserver
      operation: Update
      apiVersion: networking.k8s.io/v1
      fieldsType: FieldsV1
     
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector: {}
  policyTypes:
    - Ingress
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: blog-django-py
  namespace: fiap-aso6-grupo07
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  host: fiap-aso6-grupo07.apps.na46.prod.nextcle.com
  to:
    kind: Service
    name: blog-django-py
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None
status:
  ingress:
    - host: fiap-aso6-grupo07.apps.na46.prod.nextcle.com
      routerName: default
      wildcardPolicy: None
      routerCanonicalHostname: apps.na46.prod.nextcle.com

--- 
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-ingress-namespace
  namespace: fiap-aso6-grupo07
  generation: 1
  managedFields:
    - manager: openshift-apiserver
      operation: Update
      apiVersion: networking.k8s.io/v1
      fieldsType: FieldsV1
    
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy: global
  policyTypes:
    - Ingress

